@model DietMealApp.Core.ViewModels.GenerateShoppingListViewModel
@using DietMealApp.Core.Enums;
@{

}
<h1>Generuj Listę zakupów</h1>

<ul class="nav nav-tabs" id="shoppingTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="day-tab" data-bs-toggle="tab" data-bs-target="#day" type="button" role="tab" aria-controls="day" aria-selected="true">Dni</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="meal-tab" data-bs-toggle="tab" data-bs-target="#meal" type="button" role="tab" aria-controls="meal" aria-selected="false">Posiłki</button>
    </li>
</ul>

<form id="shoppingList" method="post" class="mt-3">
    <input type="hidden" name="ListType" id="ListType" />
    <div class="tab-content" id="shoppingTabsContent">
        <div class="tab-pane fade show active" id="day" role="tabpanel" aria-labelledby="day-tab">
            <table id="daysTable">
                <tr>
                    <th style="width:30%" class="col">Dzień</th>
                    <th style="width:20%" class="col">Liczba dni</th>
                </tr>
                @for (int i = 0; i < @Model.ListByDay.Count; i++)
                {
                    <tr class="d-table-row">
                        <td style="width:70%">
                            @Html.HiddenFor(a=>a.ListByDay[i].Day.Id)
                            <label class="col-form-label">@(Model.ListByDay[i].Day.Name + " (" + Model.ListByDay[i].Day.DayMeals.Where(a=>a.Meal.TypeOfMeal == MealTimeType.Lunch).Select(a=>a.Meal.MealName).FirstOrDefault()+ ")") </label>
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(a=>a.ListByDay[i].Quantity, htmlAttributes: new { @class = "form-control"})
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div class="tab-pane fade" id="meal" role="tabpanel" aria-labelledby="meal-tab">
            <table id="daysTable">
                <tr>
                    <th style="width:30%" class="col">Posiłek</th>
                    <th style="width:20%" class="col">Liczba posiłków</th>
                </tr>
                @for (int i = 0; i < @Model.ListByMeal.Count; i++)
                {
                    <tr class="d-table-row">
                        <td style="width:70%">
                            @Html.HiddenFor(a=>a.ListByMeal[i].Meal.Id)
                            <label class="col-form-label">@(Model.ListByMeal[i].Meal.MealName) </label>
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(a=>a.ListByMeal[i].Quantity, htmlAttributes: new { @class = "form-control"})
                        </td>
                    </tr>
                }
            </table>
        </div>

    </div>
</form>
<div class="row">
    <button type="button" name="submit" value="days" id="btnsubmit" class="btn btn-primary">Generuj listę</button>
</div>

<div id="shoppingProductsList">
</div>

<script type="text/javascript">
    $(document).ready(function () {
        document.getElementById('ListType').value = $("#shoppingTabs li button.active").attr("aria-controls");
        $("#btnsubmit").click(function () {
            var data = $('#shoppingList').serialize();
            $.ajax({
                type: 'post',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                cache: false,
                url: "/Shopping/Generate",
                data: data,
                success: function (data, textStatus, jqXHR) {
                    $("#shoppingProductsList").html(data);
                    $(".isBought").on("click", function(){
                        var row = $(this).parent().parent();
                        if (this.checked == true){
                            row.css({"color": "#a9b1b8", "text-decoration":"line-through" })
                            row.find(".editable").css({"color": "#a9b1b8", "text-decoration":"line-through" })
                        }
                        else{
                            row.css({"color": "#212529", "text-decoration":"none" })
                            row.find(".editable").css({"color": "#212529", "text-decoration":"none" })
                        }
                    });
                    $(".add-position").on("click", function(){
                        var card = $(this).parent().parent().parent();
                        card.find('.listByCategory').append('<li><div class="row positionShoppingList"><div class="col-4"><input type="text" class="form-control"/></div><div class="col-2"><input type="text" class="form-control"/></div><div class="col-3" style="text-align:center"><input class="checkbox isBought" type="checkbox" /></div></div></li>')
                    });
                    $("ol").on('click', '.edit-position', function(){
                        var button = $(this);
                        console.log($('input.editing').val());
                        var elem = button.parent();
                        if(button.attr('editing') == '1') {
                            button.removeAttr('editing');
                            $(document).find('div.editing').each(function() {
                                var div = $('<div class="col-2"><div class="editable" style="text-align:right; display: inline-block">'+ $('input.editing').val().trim() +'</div><button type="button" class="btn fas fa-edit edit-position"></button></div>');
                                elem.replaceWith(div);
                            });
                        }
                        else {
                            var input = $("<div class='col-2'><div class='editing' style='text-align:right; display: inline-block'></div><input class='col-8 editing' type='text' value='"+ elem.text().trim() +"'/><button editing='1' type='button' class='btn fas fa-save edit-position'></button></div>");
                            elem.replaceWith(input);
                        }
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("Error: " + textStatus + ". ErrorThrown: " + errorThrown );
                }
            });
        });
        const buttons = document.querySelectorAll('.nav-link');
        buttons.forEach(function (button){
            button.addEventListener('click', function TabContent(){
                document.getElementById('ListType').value = button.getAttribute("aria-controls");
            });
        });
    });
</script>