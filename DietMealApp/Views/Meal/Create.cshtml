@model DietMealApp.Core.DTO.Meals.MealFormDTO
@using DietMealApp.Core.Enums;
@{

}

<h1>Dodaj posiłek</h1>

<form method="post" enctype="multipart/form-data" class="mt-3" id="mealForm">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="UserId" />
    <div class="container">
        <div class="row mb-3">
            <div class="col-9">
                <div class="form-group row mb-3">
                    <label asp-for="MealName" class="col-sm-2 col-form-label fw-bold">
                        Nazwa
                    </label>
                    <div class="col">
                        <input asp-for="MealName" class="form-control" placeholder="Wprowadź nazwę">
                        <span asp-validation-for="MealName" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label asp-for="TypeOfMeal" class="col-sm-2 col-form-label fw-bold">
                        Typ
                    </label>
                    <div class="col">
                        <select class="form-control" asp-for="TypeOfMeal"
                                asp-items="Html.GetEnumSelectList<MealTimeType>()">
                        </select>
                        <span asp-validation-for="TypeOfMeal" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label asp-for="NumberOfServings" class="col-sm-2 col-form-label fw-bold">
                        Ilość porcji
                    </label>
                    <div class="col">
                        <input asp-for="NumberOfServings" class="form-control" placeholder="Ilość porcji">
                        <span asp-validation-for="NumberOfServings" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label asp-for="Description" class="col-sm-2 col-form-label fw-bold">
                        Opis
                    </label>
                    <div class="col">
                        <textarea asp-for="Description" class="form-control" rows="6" placeholder="Opis"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <hr class="dashed">
                <table id="productsTable" style="width:100%">
                    <tr>
                        <th style="width:60%" class="col mb-3">Nazwa produktu</th>
                        <th style="width:30%" class="col mb-3">Ilość (w gramach)</th>
                        <th style="width:10%" class="col mb-3"></th>
                    </tr>
                    <tbody>
                        @if (Model.MealProducts != null)
                    {
                        @for (int i = 0; i < Model.MealProducts.Count; i++)
                        {
                            <tr class="d-table-row mb-3">
                                <td style="width:70%">
                                    <select class="form-control select-class" id="selectedProduct_@i" name="MealProducts[@i].ProductId">
                                        <option selected> --Wybierz produkt-- </option>
                                        @foreach (var product in Model.Products)
                                        {
                                            <option value="@product.Id">@product.ProductName</option>

                                        }
                                    </select>
                                </td>
                                <td style="width:30%">
                                    <input id="quantity" class="form-control quantity-class" name="MealProducts[@i].Quantity" placeholder="Ilość" />
                                </td>
                                <td>
                                    <input type="button" onclick="DeleteRow(this)" class="btn btn-link" style="margin-top:10px" />
                                </td>
                                <input type="hidden" name="MealProducts[@i].MealId" />
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
            <div class="col">
                <div class="form-group row">
                    <div class="col" lang="pl">
                        <img style="display:none" id="PhotoPreview" src="#" alt="image" />
                        <input asp-for="Photo" type="file" accept="image/*" onchange="readURL(this);" class="form-control form-control-sm fw-bold">
                        <span asp-validation-for="Photo" class="text-danger"></span>
                    </div>
                </div>
                <div id="nutrition">

                </div>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-12">
            <button type="button" id="add-row" class="btn btn-link"><i class="fa fa-plus"></i> Dodaj produkt</button>
        </div>
        <div class="col-sm-12" style="display:flex; justify-content:flex-end">
            <button style="margin-right:10px" type="submit" class="btn btn-primary">Dodaj</button>
            <a asp-action="Index" class="btn btn-danger">Wróć do listy posiłków</a>
        </div>
    </div>
</form>
<script type="text/javascript">
            $(document).on("click", "#add-row", function () {
                var indexProductTable = document.getElementById("productsTable").rows.length-1;
                $.ajax({
                    method: "GET",
                    url: "/Meal/AddProductRow?index=" + indexProductTable,
                    success: function (data) {
                        $("#productsTable").append(data);
                    }
                });
            });

            function DeleteRow(r) {
                var i = r.parentNode.parentNode.rowIndex;
                document.getElementById("productsTable").deleteRow(i);
            }

            $(document).ready(function () {
                calcNutri();
                const mealForm = document.querySelector('#mealForm');
                mealForm.addEventListener('submit', function resetFields() {

                    var count = 0;
                    var products = $("#productsTable .select-class");
                    $.each(products, function () {
                        $(this).attr(`name`, `MealProducts[${count}].ProductId`);
                        count++;
                    });

                    var count = 0;
                    var quantity = $("#productsTable .quantity-class");
                    $.each(quantity, function () {
                        $(this).attr(`name`, `MealProducts[${count}].Quantity`);
                        count++;

                    });
                });
            });

                function readURL(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();
                                reader.onload = function (e) {
                                    $('#PhotoPreview')
                                        .attr('src', e.target.result)
                                        .width(300)
                                        .height(300);
                                    $('#PhotoPreview').show();
                                };
                                reader.readAsDataURL(input.files[0]);
                            }
                 }


        function calcNutri(){
            $(document).ready(function(){
                var record = {};
                var allRecords =  [];
                $('tr.d-table-row').each(function (index, value){
                    newRecord = {
                        _kcal: $('option:selected', $(this)).attr('data-kcal'),
                        _protein: $('option:selected', $(this)).attr('data-protein'),
                        _carbo: $('option:selected', $(this)).attr('data-carbo'),
                        _fats: $('option:selected', $(this)).attr('data-fats'),
                        _quantity: $('.quantity-class',$(this)).val()
                    }
                    allRecords.push(newRecord);
                })
                var html = calculateNutrition(allRecords);
            });
        }
        function calculateNutrition(data){
                            var kalorie;
                            var tluszcze;
                            var bialka;
                            var weglowodany;
                $.each(data, function(index, value){
                        kalorie = (((parseFloat(value._kcal || 0)/100)*parseFloat(value._quantity || 0))+parseFloat(kalorie || 0)).toFixed(2);
                        tluszcze = (((parseFloat(value._fats||0)/100)*parseFloat(value._quantity||0))+parseFloat(tluszcze||0)).toFixed(2);
                        bialka = (((parseFloat(value._protein||0)/100)*parseFloat(value._quantity)||0)+parseFloat(bialka||0)).toFixed(2);
                        weglowodany = (((parseFloat(value._carbo||0)/100)*parseFloat(value._quantity||0))+parseFloat(weglowodany||0)).toFixed(2);
                });
                var html = "<b>Kalorie: "+ kalorie+"</b><br> <b>Tłuszcze: "+ tluszcze+"</b><br> <b>Białka: "+ bialka+"</b><br> <b>Węglowodany: "+ weglowodany+"</b><br>"
                $('#nutrition').html(html);
        }
</script>